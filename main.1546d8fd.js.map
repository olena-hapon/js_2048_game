{"version":3,"sources":["scripts/main.js"],"names":["board","move","gameField","document","querySelector","button","gameScore","messageStart","messageLose","messageWin","cellsInRow","scoreCount","hasEmptyTile","i","includes","setRandom","randomRow","Math","floor","random","randomCol","numb","setCells","startTheGame","innerText","loseTheGame","r","c","currentCell","rows","cells","num","classList","value","add","remove","replace","removeEmptyTiles","row","filter","slide","newRow","length","push","hasFieldChanged","oldrow","second","slideLeft","slideRight","reverse","slideUp","column","slideDown","addEventListener","e","preventDefault","code"],"mappings":"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","file":"main.1546d8fd.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst gameField = document.querySelector('tbody');\nconst button = document.querySelector('.button');\nconst gameScore = document.querySelector('.game-score');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nconst cellsInRow = 4;\nlet scoreCount = 0;\nlet board;\nlet move;\n\nbutton.addEventListener('click', () => {\n  button.classList.replace('start', 'restart');\n  button.innerText = 'Restart';\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n\n  startTheGame();\n});\n\nfunction hasEmptyTile() {\n  for (let i = 0; i < cellsInRow; i++) {\n    if (board[i].includes(0)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction setRandom() {\n  while (hasEmptyTile()) {\n    const randomRow = Math.floor((Math.random() * cellsInRow));\n    const randomCol = Math.floor((Math.random() * cellsInRow));\n\n    if (board[randomRow][randomCol] === 0) {\n      const numb = Math.random() < 0.9 ? 2 : 4;\n\n      board[randomRow][randomCol] = numb;\n      break;\n    }\n  }\n\n  setCells();\n}\n\nfunction startTheGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  scoreCount = 0;\n  gameScore.innerText = scoreCount;\n\n  setRandom();\n  setRandom();\n}\n\nfunction loseTheGame() {\n  if (hasEmptyTile()) {\n    return false;\n  }\n\n  for (let r = 0; r < cellsInRow; r++) {\n    for (let c = 0; c < cellsInRow; c++) {\n      if (board[r][c] === board[r][c + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let r = 0; r < cellsInRow - 1; r++) {\n    for (let c = 0; c < cellsInRow; c++) {\n      if (board[r][c] === board[r + 1][c]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction setCells() {\n  for (let r = 0; r < cellsInRow; r++) {\n    for (let c = 0; c < cellsInRow; c++) {\n      const currentCell = gameField.rows[r].cells[c];\n      const num = board[r][c];\n\n      currentCell.innerText = '';\n      currentCell.classList.value = '';\n      currentCell.classList.add('field-cell');\n\n      if (num > 0) {\n        currentCell.innerText = num;\n        currentCell.classList.add(`field-cell--${num}`);\n      }\n\n      if (num === 2048) {\n        messageWin.classList.remove('hidden');\n        button.classList.replace('restart', 'start');\n      }\n    }\n  }\n\n  if (loseTheGame()) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction removeEmptyTiles(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(row) {\n  let newRow = removeEmptyTiles(row);\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      scoreCount += newRow[i];\n\n      gameScore.innerText = scoreCount;\n    }\n  }\n\n  newRow = removeEmptyTiles(newRow);\n\n  while (newRow.length < cellsInRow) {\n    newRow.push(0);\n  }\n\n  if (hasFieldChanged(row, newRow)) {\n    move = true;\n\n    return newRow;\n  }\n\n  return row;\n}\n\nfunction hasFieldChanged(oldrow, second) {\n  for (let c = 0; c < cellsInRow; c++) {\n    if (oldrow[c] !== second[c]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < cellsInRow; r++) {\n    let row = board[r];\n\n    row = slide(row);\n    board[r] = row;\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < cellsInRow; r++) {\n    let row = board[r].reverse();\n\n    row = slide(row).reverse();\n    board[r] = row;\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < cellsInRow; c++) {\n    let column = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    column = slide(column);\n\n    for (let r = 0; r < cellsInRow; r++) {\n      board[r][c] = column[r];\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < cellsInRow; c++) {\n    let column = [board[0][c], board[1][c], board[2][c], board[3][c]].reverse();\n\n    column = slide(column).reverse();\n\n    for (let r = 0; r < cellsInRow; r++) {\n      board[r][c] = column[r];\n    }\n  }\n}\n\ndocument.addEventListener('keyup', (e) => {\n  e.preventDefault();\n  move = '';\n\n  switch (e.code) {\n    case 'ArrowLeft':\n      slideLeft();\n\n      if (move) {\n        setRandom();\n      }\n\n      break;\n\n    case 'ArrowRight':\n      slideRight();\n\n      if (move) {\n        setRandom();\n      }\n      break;\n\n    case 'ArrowUp':\n      slideUp();\n\n      if (move) {\n        setRandom();\n      }\n      break;\n\n    case 'ArrowDown':\n      slideDown();\n\n      if (move) {\n        setRandom();\n      }\n\n      break;\n  }\n\n  setCells();\n});\n"]}